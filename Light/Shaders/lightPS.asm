//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer gPassCB
// {
//
//   struct PassConstants
//   {
//       
//       float4x4 View;                 // Offset:    0
//       float4x4 InvView;              // Offset:   64
//       float4x4 Proj;                 // Offset:  128
//       float4x4 InvProj;              // Offset:  192
//       float3 EyePosW;                // Offset:  256
//       float pad0;                    // Offset:  268
//       float2 RenderTargetSize;       // Offset:  272
//       float2 InvRenderTargetSize;    // Offset:  280
//       float NearZ;                   // Offset:  288
//       float FarZ;                    // Offset:  292
//       float TotalTime;               // Offset:  296
//       float DeltaTime;               // Offset:  300
//
//   } gPassCB;                         // Offset:    0 Size:   304
//
// }
//
// cbuffer gLightCB
// {
//
//   struct Lights
//   {
//       
//       struct DirectionalLight
//       {
//           
//           float3 Color;              // Offset:    0
//           float pad0;                // Offset:   12
//           float3 Dir;                // Offset:   16
//           float pad1;                // Offset:   28
//
//       } DirectionalLights[5];        // Offset:    0
//       
//       struct PointLight
//       {
//           
//           float3 Color;              // Offset:  160
//           float StartAtten;          // Offset:  172
//           float3 Pos;                // Offset:  176
//           float EndAtten;            // Offset:  188
//
//       } PointLights[5];              // Offset:  160
//       
//       struct SpotLight
//       {
//           
//           float3 Color;              // Offset:  320
//           float StartAtten;          // Offset:  332
//           float3 Pos;                // Offset:  336
//           float EndAtten;            // Offset:  348
//           float3 Dir;                // Offset:  352
//           float SpotPower;           // Offset:  364
//
//       } SpotLights[5];               // Offset:  320
//
//   } gLightCB;                        // Offset:    0 Size:   560
//
// }
//
// cbuffer gMatCB
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 Diffuse;                // Offset:    0
//       float Alpha;                   // Offset:   12
//       float3 Specular;               // Offset:   16
//       float Gloss;                   // Offset:   28
//       float3 Ambient;                // Offset:   32
//       float pad0;                    // Offset:   44
//
//   } gMatCB;                          // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gPassCB                           cbuffer      NA          NA     CB0            cb1      1 
// gLightCB                          cbuffer      NA          NA     CB1            cb2      1 
// gMatCB                            cbuffer      NA          NA     CB2            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1:1][17], immediateIndexed, space=0
dcl_constantbuffer CB1[2:2][35], immediateIndexed, space=0
dcl_constantbuffer CB2[3:3][3], immediateIndexed, space=0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_indexableTemp x0[5], 4
dcl_indexableTemp x1[5], 4
//
// Initial variable locations:
//   v0.x <- i.PosH.x; v0.y <- i.PosH.y; v0.z <- i.PosH.z; v0.w <- i.PosH.w; 
//   v1.x <- i.NormalW.x; v1.y <- i.NormalW.y; v1.z <- i.NormalW.z; 
//   v2.x <- i.PosW.x; v2.y <- i.PosW.y; v2.z <- i.PosW.z; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w; 
//   x0 <- shadowFactor
//
#line 23 "D:\Code\Computer Graphics\DirectX\LearnDX12\Light\Shader\Light.hlsl"
mov r0.xyz, -CB0[1][16].xyzx
add r0.xyz, r0.xyzx, v2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- viewDir.x; r0.y <- viewDir.y; r0.z <- viewDir.z

#line 24
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 28
mov r0.w, l(0)  // r0.w <- index
mov r1.w, r0.w  // r1.w <- index
loop 
  ilt r2.x, r1.w, l(5)
  breakc_z r2.x

#line 30
  itof r2.x, l(1)
  mov x0[r1.w + 0].x, r2.x

#line 31
  iadd r1.w, r1.w, l(1)
endloop 

#line 34
nop 
mov r2.xyzw, CB2[3][1].xyzw
mov r3.xyz, CB2[3][0].xyzx
mov r0.xyz, r0.xyzx
mov r1.xyz, r1.xyzx
mov r4.xyz, v2.xyzx
mov r0.w, x0[0].x
mov r1.w, x0[1].x
mov r3.w, x0[2].x
mov r4.w, x0[3].x
mov r5.x, x0[4].x
mov x1[0].x, r0.w
mov x1[1].x, r1.w
mov x1[2].x, r3.w
mov x1[3].x, r4.w
mov x1[4].x, r5.x

#line 121 "D:\Code\Computer Graphics\DirectX\LearnDX12\Light\Shader\DSMLighting.hlsli"
itof r5.xyz, l(0, 0, 0, 0)  // r5.x <- col.x; r5.y <- col.y; r5.z <- col.z

#line 127
nop 
mov r6.xyz, CB1[2][0].xyzx
mov r7.xyz, CB1[2][1].xyzx
mov r2.xyzw, r2.xyzw
mov r3.xyz, r3.xyzx
mov r0.xyz, r0.xyzx
mov r1.xyz, r1.xyzx

#line 80
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 81
nop 
mov r3.xyz, r3.xyzx
mov r2.xyzw, r2.xyzw
mov r6.xyz, r6.xyzx
mov r7.xyz, r7.xyzx
mov r0.xyz, r0.xyzx
mov r1.xyz, r1.xyzx

#line 69
itof r0.w, l(256)
mul r0.w, r0.w, r2.w  // r0.w <- m

#line 70
add r8.xyz, r0.xyzx, r7.xyzx
dp3 r1.w, r8.xyzx, r8.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- halfDir.x; r8.y <- halfDir.y; r8.z <- halfDir.z

#line 72
mul r9.xyz, r3.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r1.xyzx
max r1.w, r1.w, r3.w
mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
mul r6.xyz, r2.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r8.xyzx
max r1.w, r1.w, r3.w
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
add r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- <BlinnPhong return value>.x; r6.y <- <BlinnPhong return value>.y; r6.z <- <BlinnPhong return value>.z

#line 81
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeDirectionalLight return value>.x; r6.y <- <ComputeDirectionalLight return value>.y; r6.z <- <ComputeDirectionalLight return value>.z

#line 127
mov r0.w, x1[0].x
mul r6.xyz, r0.wwww, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
nop 
mov r6.xyz, CB1[2][2].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][3].xyzx  // r7.x <- light.Dir.x; r7.y <- light.Dir.y; r7.z <- light.Dir.z
mov r8.xyzw, r2.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 80
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 81
nop 
mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r8.xyzw, r8.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r11.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 69
itof r0.w, l(256)
mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
add r10.xyz, r7.xyzx, r10.xyzx
dp3 r1.w, r10.xyzx, r10.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
mul r9.xyz, r9.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r11.xyzx
max r1.w, r1.w, r3.w
mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
mul r6.xyz, r8.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r10.xyzx
max r1.w, r1.w, r3.w
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
add r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- <BlinnPhong return value>.x; r6.y <- <BlinnPhong return value>.y; r6.z <- <BlinnPhong return value>.z

#line 81
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeDirectionalLight return value>.x; r6.y <- <ComputeDirectionalLight return value>.y; r6.z <- <ComputeDirectionalLight return value>.z

#line 127
mov r0.w, x1[1].x
mul r6.xyz, r0.wwww, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
nop 
mov r6.xyz, CB1[2][4].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][5].xyzx  // r7.x <- light.Dir.x; r7.y <- light.Dir.y; r7.z <- light.Dir.z
mov r8.xyzw, r2.xyzw
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx

#line 80
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 81
nop 
mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r8.xyzw, r8.xyzw
mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r11.xyzx

#line 69
itof r0.w, l(256)
mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
add r10.xyz, r7.xyzx, r10.xyzx
dp3 r1.w, r10.xyzx, r10.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
mul r9.xyz, r9.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r11.xyzx
max r1.w, r1.w, r3.w
mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
mul r6.xyz, r8.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r10.xyzx
max r1.w, r1.w, r3.w
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
add r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- <BlinnPhong return value>.x; r6.y <- <BlinnPhong return value>.y; r6.z <- <BlinnPhong return value>.z

#line 81
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeDirectionalLight return value>.x; r6.y <- <ComputeDirectionalLight return value>.y; r6.z <- <ComputeDirectionalLight return value>.z

#line 127
mov r0.w, x1[2].x
mul r6.xyz, r0.wwww, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
nop 
mov r6.xyz, CB1[2][6].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][7].xyzx  // r7.x <- light.Dir.x; r7.y <- light.Dir.y; r7.z <- light.Dir.z
mov r8.xyzw, r2.xyzw
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx

#line 80
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 81
nop 
mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r8.xyzw, r8.xyzw
mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r11.xyzx

#line 69
itof r0.w, l(256)
mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
add r10.xyz, r7.xyzx, r10.xyzx
dp3 r1.w, r10.xyzx, r10.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
mul r9.xyz, r9.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r11.xyzx
max r1.w, r1.w, r3.w
mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
mul r6.xyz, r8.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r10.xyzx
max r1.w, r1.w, r3.w
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
add r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- <BlinnPhong return value>.x; r6.y <- <BlinnPhong return value>.y; r6.z <- <BlinnPhong return value>.z

#line 81
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeDirectionalLight return value>.x; r6.y <- <ComputeDirectionalLight return value>.y; r6.z <- <ComputeDirectionalLight return value>.z

#line 127
mov r0.w, x1[3].x
mul r6.xyz, r0.wwww, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
nop 
mov r6.xyz, CB1[2][8].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][9].xyzx  // r7.x <- light.Dir.x; r7.y <- light.Dir.y; r7.z <- light.Dir.z
mov r8.xyzw, r2.xyzw
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx

#line 80
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 81
nop 
mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r8.xyzw, r8.xyzw
mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r11.xyzx

#line 69
itof r0.w, l(256)
mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
add r10.xyz, r7.xyzx, r10.xyzx
dp3 r1.w, r10.xyzx, r10.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
mul r9.xyz, r9.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r11.xyzx
max r1.w, r1.w, r3.w
mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
mul r6.xyz, r8.xyzx, r6.xyzx
itof r1.w, l(0)
dp3 r3.w, r7.xyzx, r10.xyzx
max r1.w, r1.w, r3.w
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
add r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- <BlinnPhong return value>.x; r6.y <- <BlinnPhong return value>.y; r6.z <- <BlinnPhong return value>.z

#line 81
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeDirectionalLight return value>.x; r6.y <- <ComputeDirectionalLight return value>.y; r6.z <- <ComputeDirectionalLight return value>.z

#line 127
mov r0.w, x1[4].x
mul r6.xyz, r0.wwww, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx

#line 132
nop 
mov r6.xyz, CB1[2][10].xyzx
mov r7.xyz, CB1[2][11].xyzx
mov r0.w, CB1[2][10].w
mov r1.w, CB1[2][11].w
mov r8.xyzw, r2.xyzw
mov r9.xyz, r3.xyzx
mov r10.xyz, r0.xyzx
mov r11.xyz, r1.xyzx
mov r4.xyz, r4.xyzx

#line 86
mov r12.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r12.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 87
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w  // r3.w <- distance

#line 88
lt r4.w, r1.w, r3.w
if_nz r4.w

#line 89
  itof r12.xyz, l(0, 0, 0, 0)
endif   // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z

#line 91
if_z r4.w
  div r7.xyz, r7.xyzx, r3.wwww

#line 92
  nop 
  mov r3.w, r3.w
  mov r0.w, r0.w
  mov r1.w, r1.w

#line 64
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r3.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 92
  mov r0.w, r0.w  // r0.w <- atten

#line 93
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 95
  nop 
  mov r9.xyz, r9.xyzx
  mov r8.xyzw, r8.xyzw
  mov r6.xyz, r6.xyzx
  mov r7.xyz, r7.xyzx
  mov r10.xyz, r10.xyzx
  mov r11.xyz, r11.xyzx

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
  mul r9.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r11.xyzx
  max r1.w, r1.w, r3.w
  mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
  mul r6.xyz, r8.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r10.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r12.xyz, r6.xyzx, r9.xyzx  // r12.x <- <BlinnPhong return value>.x; r12.y <- <BlinnPhong return value>.y; r12.z <- <BlinnPhong return value>.z

#line 95
  mov r12.xyz, r12.xyzx  // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z
endif 

#line 132
add r5.xyz, r5.xyzx, r12.xyzx
nop 
mov r6.xyz, CB1[2][12].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][13].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r0.w, CB1[2][12].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][13].w  // r1.w <- light.EndAtten
mov r8.xyzw, r2.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 86
mov r12.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r12.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 87
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w  // r3.w <- distance

#line 88
lt r4.w, r1.w, r3.w
if_nz r4.w

#line 89
  itof r12.xyz, l(0, 0, 0, 0)
endif   // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z

#line 91
if_z r4.w
  div r7.xyz, r7.xyzx, r3.wwww

#line 92
  nop 
  mov r3.w, r3.w  // r3.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r3.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 92
  mov r0.w, r0.w  // r0.w <- atten

#line 93
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 95
  nop 
  mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
  mov r8.xyzw, r8.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
  mul r9.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r11.xyzx
  max r1.w, r1.w, r3.w
  mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
  mul r6.xyz, r8.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r10.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r12.xyz, r6.xyzx, r9.xyzx  // r12.x <- <BlinnPhong return value>.x; r12.y <- <BlinnPhong return value>.y; r12.z <- <BlinnPhong return value>.z

#line 95
  mov r12.xyz, r12.xyzx  // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z
endif 

#line 132
add r5.xyz, r5.xyzx, r12.xyzx
nop 
mov r6.xyz, CB1[2][14].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][15].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r0.w, CB1[2][14].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][15].w  // r1.w <- light.EndAtten
mov r8.xyzw, r2.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 86
mov r12.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r12.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 87
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w  // r3.w <- distance

#line 88
lt r4.w, r1.w, r3.w
if_nz r4.w

#line 89
  itof r12.xyz, l(0, 0, 0, 0)
endif   // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z

#line 91
if_z r4.w
  div r7.xyz, r7.xyzx, r3.wwww

#line 92
  nop 
  mov r3.w, r3.w  // r3.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r3.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 92
  mov r0.w, r0.w  // r0.w <- atten

#line 93
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 95
  nop 
  mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
  mov r8.xyzw, r8.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
  mul r9.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r11.xyzx
  max r1.w, r1.w, r3.w
  mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
  mul r6.xyz, r8.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r10.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r12.xyz, r6.xyzx, r9.xyzx  // r12.x <- <BlinnPhong return value>.x; r12.y <- <BlinnPhong return value>.y; r12.z <- <BlinnPhong return value>.z

#line 95
  mov r12.xyz, r12.xyzx  // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z
endif 

#line 132
add r5.xyz, r5.xyzx, r12.xyzx
nop 
mov r6.xyz, CB1[2][16].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][17].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r0.w, CB1[2][16].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][17].w  // r1.w <- light.EndAtten
mov r8.xyzw, r2.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 86
mov r12.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r12.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 87
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w  // r3.w <- distance

#line 88
lt r4.w, r1.w, r3.w
if_nz r4.w

#line 89
  itof r12.xyz, l(0, 0, 0, 0)
endif   // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z

#line 91
if_z r4.w
  div r7.xyz, r7.xyzx, r3.wwww

#line 92
  nop 
  mov r3.w, r3.w  // r3.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r3.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 92
  mov r0.w, r0.w  // r0.w <- atten

#line 93
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 95
  nop 
  mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
  mov r8.xyzw, r8.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
  mul r9.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r11.xyzx
  max r1.w, r1.w, r3.w
  mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
  mul r6.xyz, r8.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r10.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r12.xyz, r6.xyzx, r9.xyzx  // r12.x <- <BlinnPhong return value>.x; r12.y <- <BlinnPhong return value>.y; r12.z <- <BlinnPhong return value>.z

#line 95
  mov r12.xyz, r12.xyzx  // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z
endif 

#line 132
add r5.xyz, r5.xyzx, r12.xyzx
nop 
mov r6.xyz, CB1[2][18].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][19].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r0.w, CB1[2][18].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][19].w  // r1.w <- light.EndAtten
mov r8.xyzw, r2.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
mov r9.xyz, r3.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
mov r10.xyz, r0.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
mov r11.xyz, r1.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 86
mov r12.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r12.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 87
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w  // r3.w <- distance

#line 88
lt r4.w, r1.w, r3.w
if_nz r4.w

#line 89
  itof r12.xyz, l(0, 0, 0, 0)
endif   // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z

#line 91
if_z r4.w
  div r7.xyz, r7.xyzx, r3.wwww

#line 92
  nop 
  mov r3.w, r3.w  // r3.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r3.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 92
  mov r0.w, r0.w  // r0.w <- atten

#line 93
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 95
  nop 
  mov r9.xyz, r9.xyzx  // r9.x <- mat.Diffuse.x; r9.y <- mat.Diffuse.y; r9.z <- mat.Diffuse.z
  mov r8.xyzw, r8.xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r10.xyz, r10.xyzx  // r10.x <- viewDir.x; r10.y <- viewDir.y; r10.z <- viewDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- normal.x; r11.y <- normal.y; r11.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r8.w  // r0.w <- m

#line 70
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- halfDir.x; r10.y <- halfDir.y; r10.z <- halfDir.z

#line 72
  mul r9.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r11.xyzx
  max r1.w, r1.w, r3.w
  mul r9.xyz, r1.wwww, r9.xyzx  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 73
  mul r6.xyz, r8.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r10.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r12.xyz, r6.xyzx, r9.xyzx  // r12.x <- <BlinnPhong return value>.x; r12.y <- <BlinnPhong return value>.y; r12.z <- <BlinnPhong return value>.z

#line 95
  mov r12.xyz, r12.xyzx  // r12.x <- <ComputePointLight return value>.x; r12.y <- <ComputePointLight return value>.y; r12.z <- <ComputePointLight return value>.z
endif 

#line 132
add r5.xyz, r5.xyzx, r12.xyzx

#line 137
nop 
mov r6.xyz, CB1[2][20].xyzx
mov r7.xyz, CB1[2][21].xyzx
mov r8.xyz, CB1[2][22].xyzx
mov r0.w, CB1[2][20].w
mov r1.w, CB1[2][21].w
mov r3.w, CB1[2][22].w
mov r9.xyzw, r2.xyzw
mov r10.xyz, r3.xyzx
mov r11.xyz, r0.xyzx
mov r12.xyz, r1.xyzx
mov r4.xyz, r4.xyzx

#line 100
mov r13.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r13.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 101
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w  // r4.w <- distance

#line 102
lt r5.w, r1.w, r4.w
if_nz r5.w

#line 103
  itof r13.xyz, l(0, 0, 0, 0)
endif   // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z

#line 105
if_z r5.w
  div r7.xyz, r7.xyzx, r4.wwww

#line 106
  nop 
  mov r4.w, r4.w
  mov r0.w, r0.w
  mov r1.w, r1.w

#line 64
  mov r4.w, -r4.w
  add r4.w, r1.w, r4.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r4.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 106
  mov r0.w, r0.w  // r0.w <- atten

#line 107
  itof r1.w, l(0)
  dp3 r4.w, r8.xyzx, r8.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mov r14.xyz, -r7.xyzx
  dp3 r4.w, r8.xyzx, r14.xyzx
  max r1.w, r1.w, r4.w
  log r1.w, r1.w
  mul r1.w, r1.w, r3.w
  exp r1.w, r1.w
  mul r0.w, r0.w, r1.w

#line 108
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 110
  nop 
  mov r10.xyz, r10.xyzx
  mov r9.xyzw, r9.xyzw
  mov r6.xyz, r6.xyzx
  mov r7.xyz, r7.xyzx
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r12.xyzx

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r9.w  // r0.w <- m

#line 70
  add r8.xyz, r7.xyzx, r11.xyzx
  dp3 r1.w, r8.xyzx, r8.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- halfDir.x; r8.y <- halfDir.y; r8.z <- halfDir.z

#line 72
  mul r10.xyz, r10.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r12.xyzx
  max r1.w, r1.w, r3.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- diffuse.x; r10.y <- diffuse.y; r10.z <- diffuse.z

#line 73
  mul r6.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r8.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r13.xyz, r6.xyzx, r10.xyzx  // r13.x <- <BlinnPhong return value>.x; r13.y <- <BlinnPhong return value>.y; r13.z <- <BlinnPhong return value>.z

#line 110
  mov r13.xyz, r13.xyzx  // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z
endif 

#line 137
add r5.xyz, r5.xyzx, r13.xyzx
nop 
mov r6.xyz, CB1[2][23].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][24].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r8.xyz, CB1[2][25].xyzx  // r8.x <- light.Dir.x; r8.y <- light.Dir.y; r8.z <- light.Dir.z
mov r0.w, CB1[2][23].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][24].w  // r1.w <- light.EndAtten
mov r3.w, CB1[2][25].w  // r3.w <- light.SpotPower
mov r9.xyzw, r2.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
mov r10.xyz, r3.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
mov r11.xyz, r0.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
mov r12.xyz, r1.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z
mov r4.xyz, r4.xyzx

#line 100
mov r13.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r13.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 101
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w  // r4.w <- distance

#line 102
lt r5.w, r1.w, r4.w
if_nz r5.w

#line 103
  itof r13.xyz, l(0, 0, 0, 0)
endif   // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z

#line 105
if_z r5.w
  div r7.xyz, r7.xyzx, r4.wwww

#line 106
  nop 
  mov r4.w, r4.w  // r4.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r4.w, -r4.w
  add r4.w, r1.w, r4.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r4.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 106
  mov r0.w, r0.w  // r0.w <- atten

#line 107
  itof r1.w, l(0)
  dp3 r4.w, r8.xyzx, r8.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mov r14.xyz, -r7.xyzx
  dp3 r4.w, r8.xyzx, r14.xyzx
  max r1.w, r1.w, r4.w
  log r1.w, r1.w
  mul r1.w, r1.w, r3.w
  exp r1.w, r1.w
  mul r0.w, r0.w, r1.w

#line 108
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 110
  nop 
  mov r10.xyz, r10.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
  mov r9.xyzw, r9.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
  mov r12.xyz, r12.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r9.w  // r0.w <- m

#line 70
  add r8.xyz, r7.xyzx, r11.xyzx
  dp3 r1.w, r8.xyzx, r8.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- halfDir.x; r8.y <- halfDir.y; r8.z <- halfDir.z

#line 72
  mul r10.xyz, r10.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r12.xyzx
  max r1.w, r1.w, r3.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- diffuse.x; r10.y <- diffuse.y; r10.z <- diffuse.z

#line 73
  mul r6.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r8.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r13.xyz, r6.xyzx, r10.xyzx  // r13.x <- <BlinnPhong return value>.x; r13.y <- <BlinnPhong return value>.y; r13.z <- <BlinnPhong return value>.z

#line 110
  mov r13.xyz, r13.xyzx  // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z
endif 

#line 137
add r5.xyz, r5.xyzx, r13.xyzx
nop 
mov r6.xyz, CB1[2][26].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][27].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r8.xyz, CB1[2][28].xyzx  // r8.x <- light.Dir.x; r8.y <- light.Dir.y; r8.z <- light.Dir.z
mov r0.w, CB1[2][26].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][27].w  // r1.w <- light.EndAtten
mov r3.w, CB1[2][28].w  // r3.w <- light.SpotPower
mov r9.xyzw, r2.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
mov r10.xyz, r3.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
mov r11.xyz, r0.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
mov r12.xyz, r1.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z
mov r4.xyz, r4.xyzx

#line 100
mov r13.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r13.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 101
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w  // r4.w <- distance

#line 102
lt r5.w, r1.w, r4.w
if_nz r5.w

#line 103
  itof r13.xyz, l(0, 0, 0, 0)
endif   // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z

#line 105
if_z r5.w
  div r7.xyz, r7.xyzx, r4.wwww

#line 106
  nop 
  mov r4.w, r4.w  // r4.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r4.w, -r4.w
  add r4.w, r1.w, r4.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r4.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 106
  mov r0.w, r0.w  // r0.w <- atten

#line 107
  itof r1.w, l(0)
  dp3 r4.w, r8.xyzx, r8.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mov r14.xyz, -r7.xyzx
  dp3 r4.w, r8.xyzx, r14.xyzx
  max r1.w, r1.w, r4.w
  log r1.w, r1.w
  mul r1.w, r1.w, r3.w
  exp r1.w, r1.w
  mul r0.w, r0.w, r1.w

#line 108
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 110
  nop 
  mov r10.xyz, r10.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
  mov r9.xyzw, r9.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
  mov r12.xyz, r12.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r9.w  // r0.w <- m

#line 70
  add r8.xyz, r7.xyzx, r11.xyzx
  dp3 r1.w, r8.xyzx, r8.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- halfDir.x; r8.y <- halfDir.y; r8.z <- halfDir.z

#line 72
  mul r10.xyz, r10.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r12.xyzx
  max r1.w, r1.w, r3.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- diffuse.x; r10.y <- diffuse.y; r10.z <- diffuse.z

#line 73
  mul r6.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r8.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r13.xyz, r6.xyzx, r10.xyzx  // r13.x <- <BlinnPhong return value>.x; r13.y <- <BlinnPhong return value>.y; r13.z <- <BlinnPhong return value>.z

#line 110
  mov r13.xyz, r13.xyzx  // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z
endif 

#line 137
add r5.xyz, r5.xyzx, r13.xyzx
nop 
mov r6.xyz, CB1[2][29].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][30].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r8.xyz, CB1[2][31].xyzx  // r8.x <- light.Dir.x; r8.y <- light.Dir.y; r8.z <- light.Dir.z
mov r0.w, CB1[2][29].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][30].w  // r1.w <- light.EndAtten
mov r3.w, CB1[2][31].w  // r3.w <- light.SpotPower
mov r9.xyzw, r2.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
mov r10.xyz, r3.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
mov r11.xyz, r0.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
mov r12.xyz, r1.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z
mov r4.xyz, r4.xyzx

#line 100
mov r13.xyz, -r4.xyzx
add r7.xyz, r7.xyzx, r13.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 101
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w  // r4.w <- distance

#line 102
lt r5.w, r1.w, r4.w
if_nz r5.w

#line 103
  itof r13.xyz, l(0, 0, 0, 0)
endif   // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z

#line 105
if_z r5.w
  div r7.xyz, r7.xyzx, r4.wwww

#line 106
  nop 
  mov r4.w, r4.w  // r4.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r4.w, -r4.w
  add r4.w, r1.w, r4.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r4.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 106
  mov r0.w, r0.w  // r0.w <- atten

#line 107
  itof r1.w, l(0)
  dp3 r4.w, r8.xyzx, r8.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mov r14.xyz, -r7.xyzx
  dp3 r4.w, r8.xyzx, r14.xyzx
  max r1.w, r1.w, r4.w
  log r1.w, r1.w
  mul r1.w, r1.w, r3.w
  exp r1.w, r1.w
  mul r0.w, r0.w, r1.w

#line 108
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 110
  nop 
  mov r10.xyz, r10.xyzx  // r10.x <- mat.Diffuse.x; r10.y <- mat.Diffuse.y; r10.z <- mat.Diffuse.z
  mov r9.xyzw, r9.xyzw  // r9.x <- mat.Specular.x; r9.y <- mat.Specular.y; r9.z <- mat.Specular.z; r9.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r7.xyz, r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z
  mov r11.xyz, r11.xyzx  // r11.x <- viewDir.x; r11.y <- viewDir.y; r11.z <- viewDir.z
  mov r12.xyz, r12.xyzx  // r12.x <- normal.x; r12.y <- normal.y; r12.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r9.w  // r0.w <- m

#line 70
  add r8.xyz, r7.xyzx, r11.xyzx
  dp3 r1.w, r8.xyzx, r8.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- halfDir.x; r8.y <- halfDir.y; r8.z <- halfDir.z

#line 72
  mul r10.xyz, r10.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r12.xyzx
  max r1.w, r1.w, r3.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- diffuse.x; r10.y <- diffuse.y; r10.z <- diffuse.z

#line 73
  mul r6.xyz, r9.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r3.w, r7.xyzx, r8.xyzx
  max r1.w, r1.w, r3.w
  log r1.w, r1.w
  mul r0.w, r0.w, r1.w
  exp r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- specular.x; r6.y <- specular.y; r6.z <- specular.z

#line 75
  add r13.xyz, r6.xyzx, r10.xyzx  // r13.x <- <BlinnPhong return value>.x; r13.y <- <BlinnPhong return value>.y; r13.z <- <BlinnPhong return value>.z

#line 110
  mov r13.xyz, r13.xyzx  // r13.x <- <ComputeSpotLight return value>.x; r13.y <- <ComputeSpotLight return value>.y; r13.z <- <ComputeSpotLight return value>.z
endif 

#line 137
add r5.xyz, r5.xyzx, r13.xyzx
nop 
mov r6.xyz, CB1[2][32].xyzx  // r6.x <- light.Color.x; r6.y <- light.Color.y; r6.z <- light.Color.z
mov r7.xyz, CB1[2][33].xyzx  // r7.x <- light.Pos.x; r7.y <- light.Pos.y; r7.z <- light.Pos.z
mov r8.xyz, CB1[2][34].xyzx  // r8.x <- light.Dir.x; r8.y <- light.Dir.y; r8.z <- light.Dir.z
mov r0.w, CB1[2][32].w  // r0.w <- light.StartAtten
mov r1.w, CB1[2][33].w  // r1.w <- light.EndAtten
mov r3.w, CB1[2][34].w  // r3.w <- light.SpotPower
mov r2.xyzw, r2.xyzw  // r2.x <- mat.Specular.x; r2.y <- mat.Specular.y; r2.z <- mat.Specular.z; r2.w <- mat.Gloss
mov r3.xyz, r3.xyzx  // r3.x <- mat.Diffuse.x; r3.y <- mat.Diffuse.y; r3.z <- mat.Diffuse.z
mov r0.xyz, r0.xyzx  // r0.x <- viewDir.x; r0.y <- viewDir.y; r0.z <- viewDir.z
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z
mov r4.xyz, r4.xyzx

#line 100
mov r4.xyz, -r4.xyzx
add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- lightDir.x; r4.y <- lightDir.y; r4.z <- lightDir.z

#line 101
dp3 r4.w, r4.xyzx, r4.xyzx
sqrt r4.w, r4.w  // r4.w <- distance

#line 102
lt r5.w, r1.w, r4.w
if_nz r5.w  // r0.x <- viewDir.x; r0.y <- viewDir.y; r0.z <- viewDir.z; r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z; r2.x <- mat.Specular.x; r2.y <- mat.Specular.y; r2.z <- mat.Specular.z; r2.w <- mat.Gloss; r3.x <- mat.Diffuse.x; r3.y <- mat.Diffuse.y; r3.z <- mat.Diffuse.z; r0.x <- viewDir.x; r0.y <- viewDir.y; r0.z <- viewDir.z; r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 103
  itof r7.xyz, l(0, 0, 0, 0)
endif   // r7.x <- <ComputeSpotLight return value>.x; r7.y <- <ComputeSpotLight return value>.y; r7.z <- <ComputeSpotLight return value>.z

#line 105
if_z r5.w
  div r4.xyz, r4.xyzx, r4.wwww

#line 106
  nop 
  mov r4.w, r4.w  // r4.w <- distance
  mov r0.w, r0.w  // r0.w <- startAtten
  mov r1.w, r1.w  // r1.w <- endAtten

#line 64
  mov r4.w, -r4.w
  add r4.w, r1.w, r4.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.w
  div r0.w, r4.w, r0.w  // r0.w <- <CalcuAttenuation return value>

#line 106
  mov r0.w, r0.w  // r0.w <- atten

#line 107
  itof r1.w, l(0)
  dp3 r4.w, r8.xyzx, r8.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  mov r9.xyz, -r4.xyzx
  dp3 r4.w, r8.xyzx, r9.xyzx
  max r1.w, r1.w, r4.w
  log r1.w, r1.w
  mul r1.w, r1.w, r3.w
  exp r1.w, r1.w
  mul r0.w, r0.w, r1.w

#line 108
  mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z

#line 110
  nop 
  mov r3.xyz, r3.xyzx  // r3.x <- mat.Diffuse.x; r3.y <- mat.Diffuse.y; r3.z <- mat.Diffuse.z
  mov r2.xyzw, r2.xyzw  // r2.x <- mat.Specular.x; r2.y <- mat.Specular.y; r2.z <- mat.Specular.z; r2.w <- mat.Gloss
  mov r6.xyz, r6.xyzx  // r6.x <- lightColor.x; r6.y <- lightColor.y; r6.z <- lightColor.z
  mov r4.xyz, r4.xyzx  // r4.x <- lightDir.x; r4.y <- lightDir.y; r4.z <- lightDir.z
  mov r0.xyz, r0.xyzx  // r0.x <- viewDir.x; r0.y <- viewDir.y; r0.z <- viewDir.z
  mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 69
  itof r0.w, l(256)
  mul r0.w, r0.w, r2.w  // r0.w <- m

#line 70
  add r0.xyz, r0.xyzx, r4.xyzx
  dp3 r1.w, r0.xyzx, r0.xyzx
  rsq r1.w, r1.w
  mul r0.xyz, r0.xyzx, r1.wwww  // r0.x <- halfDir.x; r0.y <- halfDir.y; r0.z <- halfDir.z

#line 72
  mul r3.xyz, r3.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r1.x, r4.xyzx, r1.xyzx
  max r1.x, r1.x, r1.w
  mul r1.xyz, r1.xxxx, r3.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z

#line 73
  mul r2.xyz, r2.xyzx, r6.xyzx
  itof r1.w, l(0)
  dp3 r0.x, r4.xyzx, r0.xyzx
  max r0.x, r0.x, r1.w
  log r0.x, r0.x
  mul r0.x, r0.x, r0.w
  exp r0.x, r0.x
  mul r0.xyz, r0.xxxx, r2.xyzx  // r0.x <- specular.x; r0.y <- specular.y; r0.z <- specular.z

#line 75
  add r7.xyz, r0.xyzx, r1.xyzx  // r7.x <- <BlinnPhong return value>.x; r7.y <- <BlinnPhong return value>.y; r7.z <- <BlinnPhong return value>.z

#line 110
  mov r7.xyz, r7.xyzx  // r7.x <- <ComputeSpotLight return value>.x; r7.y <- <ComputeSpotLight return value>.y; r7.z <- <ComputeSpotLight return value>.z
endif 

#line 137
add r0.xyz, r5.xyzx, r7.xyzx  // r0.x <- col.x; r0.y <- col.y; r0.z <- col.z

#line 140
mov r0.xyz, r0.xyzx  // r0.x <- <ComputeLighting return value>.x; r0.y <- <ComputeLighting return value>.y; r0.z <- <ComputeLighting return value>.z

#line 34 "D:\Code\Computer Graphics\DirectX\LearnDX12\Light\Shader\Light.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- col.x; r0.y <- col.y; r0.z <- col.z

#line 35
add r0.xyz, r0.xyzx, CB2[3][2].xyzx

#line 37
mov o0.xyz, r0.xyzx
mov o0.w, CB2[3][0].w
ret 
// Approximately 926 instruction slots used
